Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
LOAD hello.o
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000       0xee
 *(.vectors)
 .vectors       0x00000000       0x8c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000098        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000a0        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x000000a0                __vector_22
                0x000000a0                __vector_28
                0x000000a0                __vector_1
                0x000000a0                __vector_32
                0x000000a0                __vector_34
                0x000000a0                __vector_24
                0x000000a0                __vector_12
                0x000000a0                __bad_interrupt
                0x000000a0                __vector_6
                0x000000a0                __vector_31
                0x000000a0                __vector_3
                0x000000a0                __vector_23
                0x000000a0                __vector_30
                0x000000a0                __vector_25
                0x000000a0                __vector_11
                0x000000a0                __vector_13
                0x000000a0                __vector_17
                0x000000a0                __vector_19
                0x000000a0                __vector_7
                0x000000a0                __vector_27
                0x000000a0                __vector_5
                0x000000a0                __vector_33
                0x000000a0                __vector_4
                0x000000a0                __vector_9
                0x000000a0                __vector_2
                0x000000a0                __vector_21
                0x000000a0                __vector_15
                0x000000a0                __vector_29
                0x000000a0                __vector_8
                0x000000a0                __vector_26
                0x000000a0                __vector_14
                0x000000a0                __vector_10
                0x000000a0                __vector_16
                0x000000a0                __vector_18
                0x000000a0                __vector_20
 .text          0x000000a4        0xe hello.o
                0x000000a4                send_byte
 .text          0x000000b2        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x000000b2                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000b2       0x38 hello.o
                0x000000b2                main
 .text.libgcc.mul
                0x000000ea        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000ea        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x000000ea        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000ea        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000ea        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000ea        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000ea        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x000000ea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000ea        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x000000ea                exit
                0x000000ea                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000ea        0x4 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x000000ee                _etext = .

.data           0x00800100        0x0 load address 0x000000ee
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 hello.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x0
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .bss           0x00800100        0x0 hello.o
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800100                PROVIDE (__bss_end, .)
                0x000000ee                __data_load_start = LOADADDR (.data)
                0x000000ee                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800100        0x0
                0x00800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800100                PROVIDE (__noinit_end, .)
                0x00800100                _end = .
                0x00800100                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x564
 *(.stab)
 .stab          0x00000000      0x564 hello.o

.stabstr        0x00000000      0xbea
 *(.stabstr)
 .stabstr       0x00000000      0xbea hello.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 hello.o
                                 0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(hello.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__heap_end                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__init                                            /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__stack                                           /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_1                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_10                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_11                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_12                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_13                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_14                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_15                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_16                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_17                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_18                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_19                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_2                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_20                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_21                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_22                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_23                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_24                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_25                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_26                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_27                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_28                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_29                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_3                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_30                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_31                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_32                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_33                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_34                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_4                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_5                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_6                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_7                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_8                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_9                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_default                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vectors                                         /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
_exit                                             /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
main                                              hello.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
send_byte                                         hello.o
